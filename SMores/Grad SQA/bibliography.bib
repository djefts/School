%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for David Jefts at 2019-02-07 15:54:14 -0500 


%% Saved with string encoding Unicode (UTF-8) 



@conference{vulnerabilities,
	Abstract = {Nowadays, one of the most effective ways to identify software vulnerabilities by testing is the use of fuzzing, whereby the robustness of software is tested against invalid inputs that play on implementation limits or data boundaries. A high number of random combinations of such inputs are sent to the system through its interfaces. Although fuzzing is a fast technique which detects real errors, its efficiency should be improved. Indeed, the main drawbacks of fuzz testing are its poor coverage which involves missing many errors, and the quality of tests. Enhancing fuzzing with advanced approaches such as: data tainting and coverage analysis would improve its efficiency and make it smarter. This paper will present an idea on how these techniques when combined give better error detection by iteratively guiding executions and generating the most pertinent test cases able to trigger potential vulnerabilities and maximize the coverage of testing.},
	Author = {Sofia Bekrar and Roland Groz and Laurent Mounier and Chaouki Bekrar},
	Booktitle = {2011 Fourth IEEE International Conference on Software Testing, Verification and Validation(ICST)},
	Date-Added = {2019-02-07 15:50:24 -0500},
	Date-Modified = {2019-02-07 15:53:48 -0500},
	Doi = {10.1109/ICST.2011.48},
	Month = {03},
	Pages = {427-430},
	Title = {Finding Software Vulnerabilities by Smart Fuzzing},
	Url = {doi.ieeecomputersociety.org/10.1109/ICST.2011.48},
	Volume = {00},
	Year = {2011}}
